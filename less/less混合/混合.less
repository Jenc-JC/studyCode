/*
混合就是将一系列属性 从一个规则集引入到另一个规则集的方式
1，普通混合
2，不带输出的混合
3，带参数的混合
4，带参数并且有默认值的混合
5，命名参数
6，匹配模式
7，arguments变量
*/

/* 1，普通混合（在less编译后，css文件是有输出的该混合的） */
.center{
    position: relative;
    height: 100px;
    width: 100px;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    padding: auto;
    background-color: aqua;
}

/* 2，不带输出的混合 （css文件没有输出该混合） */
#bcenter(){
  position: absolute;
}

/* 3，带参数的混合 */
#parameter(@h, @w){
  height: @h;
    width: @w;
}

/* 4，带参数并且有默认值的混合 */
.default(@c:green){
  background-color: @c;
}

/* 5，命名参数 （命名参数：在传入参数的时候可以指定传入的是哪个参数）（要跟默认值一起使用，如果没有默认值那么就要，传入全部参数）*/
.general(@w:20px,@h:20px,@fs){
  width: @w;
  height: @h;
  font-size: @fs;
}

/* 6，匹配模式  （可以选择对应的混合） （同名混合第一个参数为 @_ 表示每次使用同名混合时都会使用该混合）*/
.h(@_){
  width: 100px;
  background-color: #fff;
}
.h(one,@h:100px){
  height: @h;
}
.h(twe,@h:200px){
  height: @h;
}
.h(three,@h:300px){
  height: @h;
}

/* 7，@arguments变量 （arguments是一个伪数组，储存所有传入的参数）*/
.a(@1, @2, @3, @4){
  padding: @arguments;
}
#big{
  #bcenter;
  #parameter(400px, 400px);
  .default();
  #small{
    .center
  }
}
#p{
  .general(@fs:15px);
}
#div{
  .h(twe);
  .a(10px,20px,20px,10px);
}